id: iMjjlPXtDWM
src: youtube
title: Apple Tries to Be the Arbiter of Good Taste
speaker: larry-wall
source: bigthink
view_count: 18075
favorite_count: 0
length: 05:22
format: markdown
featured: 2013-10-26

__DESCRIPTION__

"But when good taste becomes mandatory, then it's not really good taste any more it's just manners," says Larry Wall.

<h2>Question: What do you think of Apple?</h2>

Larry Wall:

Well, Apple has always been, tried to be, at least, the arbiter of good taste and we need some of those.
I think that the world would be a much poorer place without Apple as part of the cultural ecosystem.
But we also need the other people who keep that from being the only way to do things,
because when good taste becomes mandatory, then it's not really good taste any more, it's just manners.

In the 20th century, we came out from the 19th century that was very mannered, and there are many novels
about how you can have all these good manners on the top and, you know, culturally smooth,
but, you know, underneath there's this ferment that doesn't get answered if it can't come out.

So I think going to a more evolutionary approach where Apple has their particular ecological
niche that they fill, and others are trying to optimize for different things than just
the coolest fashion statement. I think that's healthy to have that kind of diversity and that's really,
I guess, my post-modernism poking out again.

<h2>Question: How do you feel about software patents?</h2>

Larry Wall:

I am very much against the notion of software patents because I do not believe
they provide equal protection under the law to the little guy.
I consider myself to be one of the little guys.
I cannot afford to spend my time researching patents and trying to steer clear of them.
And if I did, I would be more liable.
So all the creative stuff that I do, I have to completely ignore the patent system
and just put it out there and just hope for the best.
There's no way, I, as an individual, who's contributing free software to the world,
can afford the patent system on that level.

And so I think that there's lots of different arguments you can make about the software patent system.
There have been a lot of ridiculous patents on what we would consider to be trivial inventions,
and I just can't afford to spend time worrying about it.
So I wish software patents, as a technology, would just die and go away.

Now, that's not say hardware patents haven't been useful.
I think that they're a little different and putting together a gadget or a machine
is the old fashioned kind of invention.
But computer programming is more like writing down math formulas, and we don't patent math;
we probably shouldn't patent the human genome.
Things that are sort of naturally the way the world works, they should just be sort of what
everyone has to work with as a fair playing field and I just don't think software patents
are a fair playing field right now.

<h2>Question: What's the most overrated language?</h2>

Larry Wall:

Pretty much every language is overrated by its practitioners and underrated by everyone else;
it tends to be fairly tribal. Either a language matches the way you think or it doesn't.
So I tend to think that perhaps languages that are pushed for reasons other than the technical
merits of the language would tend to fall in that category.
Some would label Java with that though Java is a good language for what it does does but it's not the
be-all and end-all, and no language really is.
I've seen people try to do things in Perl that I wouldn't try to do myself and in that sense,
in their mind, Perl is more than what they, than what I would rate it as.

So really, any language outside of its realm can be considered overrated, just like,
you know, any expert outside of their field starts talking hogwash.
So don't listen to me on any subject other than linguistics and computers, I guess. Well, maybe theology.

(Transcript taken from the YouTube video.)

