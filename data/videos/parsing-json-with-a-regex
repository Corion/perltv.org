id: 77267876
src: vimeo
title: Parsing JSON with a single Regex
speaker: brian-d-foy
source: houston-perl-mongers
view_count: 1
date: 2013-10-17
length: 29:34
format: markdown
thumbnail: http://b.vimeocdn.com/ts/452/486/452486605_200.jpg
tags: randal schwartz, json, regex, perl, houston perl mongers, grammar
featured: 2013-10-22

__DESCRIPTION__

In September 2012 Randal Schwartz posted a 
[JSON parser as a single Perl Regex](http://www.perlmonks.org/?node_id=995856) on PerlMonks.

In this presentation by brian d foy explains the regex
at the meeting of the [Houston Perl Mongers](http://houston.pm.org/)

See also the <a href="http://houston.pm.org/talks/2013talks/1310Talk/index.html">write-up</a>
about the meeting and the <a href="http://www.slideshare.net/brian_d_foy/json-regex">slides</a>
brian d foy put online.

[Mastering Perl](http://chimera.labs.oreilly.com/books/1234000001527/index.html)
Advanced Regular expressions is a chapter of that book

Some of the items
------------------
* Uses grammars: (?(DEFINED))
* Recurses: (?&KV), et alia
* Runs code during the regex: (?{ ... })
* Builds up a data structure: $^R
* At the end, replaces the string with a data structure: (?{ $_ = $^R->[1] })


The comments
-------------
* Named captures: (?<LABEL>)
* Backreference to \1  ($1)
* Independent subpattern reference, (?PARNO)  for example: (?1)
* Named capture backreference \g{LABEL}
* ++ Is a non-backtracking + quantifier
* Independent subpattern reference (?R) - the entire pattern
* Grammars - (?(DEFINE)...)
* Last captured substring $^N  (the previous captured substring)
* Grammars - (?&NAME)
* Result of last (?{...}) goes into $^R
* (?&VALUE)


